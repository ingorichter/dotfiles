# Path to your oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Theme setup
ZSH_THEME="nick"

# Plugin setup (group related plugins)
plugins=(brew colorize command-not-found docker fzf git golang kubectl macos minikube node npm pass python react-native rust sudo swiftpm tmux virtualenv web-search xcode yarn z)

# Load oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"

# Autoload custom functions
fpath=($HOMEBREW_FPATH $ZSH_FUNCTIONS $ZPLUG_FPATH $fpath)
autoload -U $ZSH_FUNCTIONS/*(:t)

# Setup zplug (check if file exists)
[[ -f ~/.zplug.zsh ]] && source ~/.zplug.zsh

# User custom settings

# Source local machine-specific settings if available
[[ -f ~/.zsh.local ]] && source ~/.zsh.local

# Source hooks if directory exists
if [[ -d ~/.zsh-hooks ]]; then
  for file in ~/.zsh-hooks/*; do
    [[ -f $file ]] && source "$file"
  done
fi

# History tweaks
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
HIST_STAMPS="yyyy-mm-dd"

# Optimize history options
setopt appendhistory inc_append_history share_history hist_ignore_dups hist_ignore_space hist_reduce_blanks

# Keybindings
bindkey "^E" history-incremental-search-backward
bindkey -e

# Disable terminal beep
unsetopt beep

# Aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"

# Add Homebrew paths before system paths
export PATH=$HOME/bin:/usr/local/bin:${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:${HOMEBREW_PREFIX}/opt/curl/bin:${PATH}

# Setup asdf if available
[[ -f ${HOMEBREW_PREFIX}/opt/asdf/libexec/asdf.sh ]] && source ${HOMEBREW_PREFIX}/opt/asdf/libexec/asdf.sh

# Function to check SSL certificate validity
function seecert () {
  nslookup $1
  (openssl s_client -showcerts -servername $1 -connect $1:443 <<< "Q" | openssl x509 -text | grep -iA2 "Validity")
}

# Load oh-my-posh theme
eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/night-owl.omp.json)"

# Ingo
# setup rbenv
eval "$(rbenv init -)"

# setup pyenv
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Load fabric-bootstrap if available
[[ -f ~/.config/fabric/fabric-bootstrap.inc ]] && source ~/.config/fabric/fabric-bootstrap.inc